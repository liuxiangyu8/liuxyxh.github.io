import{_ as e,o,c as n,a as t}from"./app-BBOdTFFq.js";const a={},i=t("p",null,"在实际项目应用中，经常会需要本机中不同的进程相互直接需要通信。",-1),c=t("p",null,"典型应用场景：",-1),r=t("p",null,"剪切板在不同应用程序间操作。",-1),s=t("p",null,"控制程序给予第三方程序通信控制接口，如播放器控制开关等。",-1),l=t("p",null,"在Windows操作系统中，进程间相互通信的方式至少可以列5种以上，本文讲述在WPF环境下比较简便的解决方案：",-1),p=t("p",null,"1.WCF NetNamedPipeBinding 　　2.Win32",-1),m=[i,c,r,s,l,p];function d(h,u){return o(),n("div",null,m)}const _=e(a,[["render",d],["__file","index.html.vue"]]),f=JSON.parse(`{"path":"/article/7vs2mf6t/","title":"本机多个WPF应用程序进行进程间通信的解决方案","lang":"zh-CN","frontmatter":{"title":"本机多个WPF应用程序进行进程间通信的解决方案","createTime":"2024/04/01 00:00:00","author":"lxyxh","article":true,"tags":["WPF","进程间通信"],"permalink":"/article/7vs2mf6t/","description":"在实际项目应用中，经常会需要本机中不同的进程相互直接需要通信。 典型应用场景： 剪切板在不同应用程序间操作。 控制程序给予第三方程序通信控制接口，如播放器控制开关等。 在Windows操作系统中，进程间相互通信的方式至少可以列5种以上，本文讲述在WPF环境下比较简便的解决方案： 1.WCF NetNamedPipeBinding 2.Win32","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"https://www.izzx.cn/article/7vs2mf6t/"}],["meta",{"property":"og:site_name","content":"知行博客"}],["meta",{"property":"og:title","content":"本机多个WPF应用程序进行进程间通信的解决方案"}],["meta",{"property":"og:description","content":"在实际项目应用中，经常会需要本机中不同的进程相互直接需要通信。 典型应用场景： 剪切板在不同应用程序间操作。 控制程序给予第三方程序通信控制接口，如播放器控制开关等。 在Windows操作系统中，进程间相互通信的方式至少可以列5种以上，本文讲述在WPF环境下比较简便的解决方案： 1.WCF NetNamedPipeBinding 2.Win32"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"lxyxh"}],["meta",{"property":"article:tag","content":"WPF"}],["meta",{"property":"article:tag","content":"进程间通信"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"本机多个WPF应用程序进行进程间通信的解决方案\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lxyxh\\"}]}"]]},"headers":[],"isBlogPost":true,"readingTime":{"minutes":0.54,"words":161},"git":{},"autoDesc":true,"filePathRelative":"blog/wpf/wpf.md","categoryList":[{"type":10000,"name":"blog"},{"type":10001,"name":"wpf"}]}`);export{_ as comp,f as data};
